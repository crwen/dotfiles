
setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on

set -q -g status-utf8 on
setw -q -g utf8 on

set -g visual-activity off
setw -g monitor-activity off
setw -g monitor-bell off

set -g history-limit 10000
# set-option default-path "$PWD"

# 关闭窗口自动重命名
setw -g automatic-rename off
# setw -g automatic-rename on
# setw -g renumber-windows on
setw -g allow-rename off

set -g set-titles on
set -g display-panes-time 2000
set -g display-time 2000

# 修改前缀指令
set -g prefix C-a
unbind C-b
bind C-a send-prefix # 绑定Ctrl+a为新的指令前缀

# set-option -g prefix2 ` # 设置一个不常用的`键作为指令前缀，按键更快些

# 加载配置文件
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded.."

# set -g default-terminal "screen-256color"
# set -g default-terminal "tmux-256color"
# set -g default-terminal "xterm-256color"
# set -ag terminal-overrides ",xterm-256color:RGB"
set-option -a terminal-overrides ",xterm-256col*:RGB"
# alacritty
# set-option -a terminal-overrides ",alacritty:RGB"

# 开启鼠标支持
# Before 2.1
# setw -g mode-mouse on # 支持鼠标选取文本等
# setw -g mouse-resize-pane on # 支持鼠标拖动调整面板的大小(通过拖动面板间的分割线)
# setw -g mouse-select-pane on # 支持鼠标选中并切换面板
# setw -g mouse-select-window on # 支持鼠标选中并切换窗口(通过点击状态栏窗口名称)

# After 2.1
# set-option -g mouse on # 等同于以上4个指令的效果

setw -g mode-keys vi # 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键


# bind Escape copy-mode # 绑定esc键为进入复制模式
# Before 2.4
# bind -t vi-copy v begin-selection # 绑定v键为开始选择文本
# bind -t vi-copy y copy-selection # 绑定y键为复制选中文本
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind p pasteb # 绑定p键为粘贴文本（p键默认用于进入上一个窗口，不建议覆盖）

# Mac
# buffer缓存复制到Mac系统粘贴板
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# Mac系统粘贴板内容复制到会话
# bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d"

# Linux, 需要安装 xclip
# buffer缓存复制到Linux系统粘贴板
# bind C-c run " tmux save-buffer - | xclip -i -sel clipboard"
# Linux系统粘贴板内容复制到会话
# bind C-v run " tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# ---------------------------------Window-------------------------------

# prefix + 0-9 切换到窗口
# prefix + n 切换到下一个窗口
# prefix + p 切换到上一个窗口
# prefix + w 打开窗口列表
# prefix + , 重命名窗口
# prefix + . 修改窗口编号
# prefix + f 快速定位窗口(输入关键字匹配)
unbind 'c'
bind t new-window
# unbind '&'

# Window navigation
unbind n
unbind p
unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9
unbind 0
bind -r C-p previous-window
bind -r C-n next-window

bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# --------------------------------Panel------------------------------------
# Add
unbind '"'
bind - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
unbind %
bind | splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

# Switch
# 绑定hjkl键为面板切换的上下左右键
# -r 表示可重复按键
bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

# Adjust size
# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
bind -r ^k resizep -U 10 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
bind -r ^j resizep -D 10 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
bind -r ^h resizep -L 10 # 绑定Ctrl+h为往←调整面板边缘10个单元格
bind -r ^l resizep -R 10 # 绑定Ctrl+l为往→调整面板边缘10个单元格

# tmux-prefix + z  maximum/back panel

# prefix + q 显示 panel 编号，消失前输入编号可切换大相应 panel
# Change window to panle

# Panel navigation
bind 1 select-pane -t:.1
bind 2 select-pane -t:.2
bind 3 select-pane -t:.3
bind 4 select-pane -t:.4
bind 5 select-pane -t:.5
bind 6 select-pane -t:.6
bind 7 select-pane -t:.7
bind 8 select-pane -t:.8
bind 9 select-pane -t:.9
bind 0 select-pane -t:.0
# bind -n M-j select-pane -L
# bind -n M-k select-pane -D
# bind -n M-i select-pane -U
# bind -n M-l select-pane -R
# Swap
bind > swap-pane -D
bind < swap-pane -U
# bind | swap-pane
bind -n M-Space next-layout

# prefix + : 打开命令行
# join-pane -s window01 # 合并名称为window01的窗口的默认（第一个）面板到当前窗口中
# join-pane -s window01.1 # .1显式指定了第一个面板，.2就是第二个面板(我本地将面板编号起始值设置为1，默认是0)
bind -n M-) join-pane -t :0
bind -n M-! join-pane -t :1
bind -n M-@ join-pane -t :2
bind -n 'M-#' join-pane -t :3
bind -n 'M-$' join-pane -t :4
bind -n M-% join-pane -t :5
bind -n M-^ join-pane -t :6
bind -n M-& join-pane -t :7
bind -n M-* join-pane -t :8
bind -n M-( join-pane -t :9

# prefix + ! 将当前 panel 拆分为一个独立的窗口

# ---------------------------------Buffer-------------------------------
bind b list-buffers
# bind p paste-buffer


# default statusbar colors
set -g status-bg black
setw -g window-status-activity-style bg=black
setw -g window-status-bell-style bg=black
# setw -g window-status-format '#[fg=brightblue] #I #W '
# set -g window-status-current-format '#[fg=magenta,bold] #I #W:#F'
# set status-left
# set -g status-left "#{?client_prefix,#[fg=colour252]#[bg=blue]#[nobold]#[noitalics]#[nounderscore],#[fg=black]#[bg=colour252]#[nobold]#[noitalics]#[nounderscore]} #S #{?client_prefix,#[fg=blue],#[fg=colour252]}#[bg=colour0]#[nobold]"
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
set -g @plugin 'erikw/tmux-powerline'
set -g @plugin 'sainnhe/tmux-fzf'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

bind-key "C-s" run-shell -b "~/.config/tmux/plugins/tmux-fzf/scripts/session.sh"
bind-key "C-w" run-shell -b "~/.config/tmux/plugins/tmux-fzf/scripts/window.sh"








